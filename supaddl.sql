-- PCB Quotes Table for Supabase (Simplified)
create table if not exists public.pcb_quotes (
  id bigint generated by default as identity primary key,
  user_id uuid references auth.users(id), -- 可为空，支持游客报价
  email varchar(255) not null, -- 联系邮箱
  phone varchar(50), -- 联系电话
  pcb_spec jsonb not null, -- PCB技术规格（包含所有PCB相关参数）
  shipping_address jsonb, -- 收货地址信息
  gerber_file_url text, -- Gerber文件URL
  status varchar(50) default 'pending', -- 订单状态: pending, quoted, confirmed, cancelled
  created_at timestamp with time zone default timezone('utc'::text, now()),
  updated_at timestamp with time zone default timezone('utc'::text, now())
);

-- 创建索引提高查询性能
create index if not exists idx_pcb_quotes_user_id on pcb_quotes(user_id);
create index if not exists idx_pcb_quotes_email on pcb_quotes(email);
create index if not exists idx_pcb_quotes_status on pcb_quotes(status);
create index if not exists idx_pcb_quotes_created_at on pcb_quotes(created_at);

-- 添加更新时间触发器
create or replace function update_updated_at_column()
returns trigger as $$
begin
    new.updated_at = now();
    return new;
end;
$$ language 'plpgsql';

create trigger update_pcb_quotes_updated_at 
    before update on pcb_quotes 
    for each row 
    execute function update_updated_at_column();

-- 用户地址表（简化）
create table if not exists public.user_addresses (
  id bigint generated by default as identity primary key,
  user_id uuid references auth.users(id) not null,
  label varchar(100), -- 地址标签如"Home", "Office"
  contact_name varchar(100) not null,
  phone varchar(50) not null,
  country varchar(10) not null,
  country_name varchar(100), -- 国家友好名称，如 "United States"
  state varchar(100),
  state_name varchar(100), -- 州/省友好名称，如 "California"
  city varchar(100),
  city_name varchar(100), -- 城市友好名称，如 "Los Angeles"
  address text not null,
  zip_code varchar(20),
  courier varchar(50), -- 首选快递
  courier_name varchar(100), -- 快递公司友好名称，如 "DHL"
  is_default boolean default false,
  created_at timestamp with time zone default timezone('utc'::text, now()),
  updated_at timestamp with time zone default timezone('utc'::text, now())
);

-- 地址表索引
create index if not exists idx_user_addresses_user_id on user_addresses(user_id);
create index if not exists idx_user_addresses_is_default on user_addresses(user_id, is_default);

-- 地址表更新时间触发器
create trigger update_user_addresses_updated_at 
    before update on user_addresses 
    for each row 
    execute function update_updated_at_column();

-- 订单主表（简化）
create table if not exists public.orders (
  id bigint generated by default as identity primary key,
  quote_id bigint references pcb_quotes(id), -- 关联报价
  user_id uuid references auth.users(id),
  shipping_address jsonb not null, -- 收货地址快照
  pcb_spec jsonb not null, -- PCB规格快照
  gerber_file_url text,
  quoted_price decimal(10,2), -- 报价金额
  shipping_cost decimal(10,2), -- 运费
  total_amount decimal(10,2), -- 总金额
  production_days integer, -- 生产周期（天）
  estimated_delivery_date date, -- 预计交付日期
  status varchar(50) default 'created', -- created, confirmed, production, shipped, completed, cancelled
  payment_status varchar(50) default 'unpaid', -- unpaid, paid, refunded
  admin_notes text,
  user_notes text,
  created_at timestamp with time zone default timezone('utc'::text, now()),
  updated_at timestamp with time zone default timezone('utc'::text, now())
);

-- 订单表索引
create index if not exists idx_orders_quote_id on orders(quote_id);
create index if not exists idx_orders_user_id on orders(user_id);
create index if not exists idx_orders_status on orders(status);
create index if not exists idx_orders_created_at on orders(created_at);

-- 订单表更新时间触发器
create trigger update_orders_updated_at 
    before update on orders 
    for each row 
    execute function update_updated_at_column();

-- 删除旧表（如果存在）
drop table if exists public.addresses cascade;
drop table if exists public.customs_declarations cascade;

-- 启用 RLS (Row Level Security)
alter table public.pcb_quotes enable row level security;
alter table public.user_addresses enable row level security;
alter table public.orders enable row level security;

-- PCB报价表的RLS策略
-- 1. 用户只能查看自己的报价（通过user_id关联）或游客报价（user_id为null时通过email匹配）
create policy "Users can view own quotes" on public.pcb_quotes
  for select using (
    auth.uid() = user_id or 
    (user_id is null and auth.jwt() ->> 'email' = email)
  );

-- 2. 已登录用户可以插入报价（user_id必须匹配）
create policy "Users can insert own quotes" on public.pcb_quotes
  for insert with check (auth.uid() = user_id);

-- 3. 游客可以插入报价（user_id为null）
create policy "Guests can insert quotes" on public.pcb_quotes
  for insert with check (user_id is null);

-- 4. 用户可以更新自己的报价
create policy "Users can update own quotes" on public.pcb_quotes
  for update using (auth.uid() = user_id)
  with check (auth.uid() = user_id);

-- 5. 管理员可以查看和更新所有报价（需要在应用层验证管理员权限）
-- 注意：这里使用service role key绕过RLS限制

-- 用户地址表的RLS策略
-- 1. 用户只能查看自己的地址
create policy "Users can view own addresses" on public.user_addresses
  for select using (auth.uid() = user_id);

-- 2. 用户只能插入自己的地址
create policy "Users can insert own addresses" on public.user_addresses
  for insert with check (auth.uid() = user_id);

-- 3. 用户只能更新自己的地址
create policy "Users can update own addresses" on public.user_addresses
  for update using (auth.uid() = user_id)
  with check (auth.uid() = user_id);

-- 4. 用户只能删除自己的地址
create policy "Users can delete own addresses" on public.user_addresses
  for delete using (auth.uid() = user_id);

-- 订单表的RLS策略
-- 1. 用户只能查看自己的订单
create policy "Users can view own orders" on public.orders
  for select using (auth.uid() = user_id);

-- 2. 系统可以创建订单（通常通过服务端API）
create policy "System can insert orders" on public.orders
  for insert with check (true); -- 订单创建由后端API控制

-- 3. 用户可以更新自己订单的用户备注
create policy "Users can update own order notes" on public.orders
  for update using (auth.uid() = user_id)
  with check (auth.uid() = user_id);

-- 管理员角色检查函数（可选）
create or replace function is_admin()
returns boolean
language sql
security definer
as $$
  select exists (
    select 1 
    from auth.users 
    where id = auth.uid() 
    and email in ('admin@example.com', 'admin@yourcompany.com')
  );
$$;

-- 为RLS策略创建索引以提高性能
create index if not exists idx_pcb_quotes_user_auth on pcb_quotes(user_id) where user_id = auth.uid();
create index if not exists idx_user_addresses_user_auth on user_addresses(user_id) where user_id = auth.uid();
create index if not exists idx_orders_user_auth on orders(user_id) where user_id = auth.uid();
